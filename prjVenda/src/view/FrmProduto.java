/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.DaoProduto;
import java.text.DecimalFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.*;

/**
 *
 * @author Alex
 */
public class FrmProduto extends javax.swing.JInternalFrame {

    boolean incluir;
    boolean editar;
    NumberFormatter mfPreco;
    ArrayList<DaoProduto> pro = new ArrayList<>();

    /**
     * Creates new form FrmProduto
     */
    public FrmProduto() {
        initComponents();
        try {
            DecimalFormat df = new DecimalFormat("#,###,##0.00;-#,###,##0.00");
            mfPreco = new NumberFormatter(df);
            mfPreco.setValueClass(Double.class);
            DefaultFormatterFactory dffPreco = new DefaultFormatterFactory(mfPreco);
            txtPreco.setFormatterFactory(dffPreco);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro:\n" + ex.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void LimpaCampos() {

        txtCodigo.setText("");
        txtDescricao.setText("");
        spnQuantidade.setValue(0);
        txtPreco.setText("");

    }

    private void LimpaTabela(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
    }

    private void HabilitaBotoes(boolean hab) {
        btnIncluir.setEnabled(hab);
        btnAlterar.setEnabled(hab);
        btnExcluir.setEnabled(hab);
        btnPesquisar.setEnabled(hab);
        btnGravar.setEnabled(!hab);
        btnCancelar.setEnabled(!hab);
    }

    private void HabilitaCampos(boolean hab) {
        txtCodigo.setEnabled(hab);
        txtDescricao.setEnabled(hab);
        spnQuantidade.setEnabled(hab);
        txtPreco.setEnabled(hab);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblprodutos = new javax.swing.JTable();
        txtPreco = new javax.swing.JFormattedTextField();
        txtDescricao = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        spnQuantidade = new javax.swing.JSpinner();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Exluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnGravar.setText("Gravar");
        btnGravar.setEnabled(false);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Código:");

        jLabel2.setText("Descrição");

        jLabel3.setText("Quantidade");

        jLabel4.setText("Preço");

        tblprodutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Quantidade", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblprodutos);
        if (tblprodutos.getColumnModel().getColumnCount() > 0) {
            tblprodutos.getColumnModel().getColumn(0).setResizable(false);
            tblprodutos.getColumnModel().getColumn(1).setResizable(false);
            tblprodutos.getColumnModel().getColumn(2).setResizable(false);
            tblprodutos.getColumnModel().getColumn(3).setResizable(false);
        }

        txtPreco.setEnabled(false);

        txtDescricao.setEnabled(false);

        txtCodigo.setEnabled(false);

        spnQuantidade.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(btnIncluir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAlterar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnExcluir)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPesquisar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGravar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar))
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnPesquisar)
                    .addComponent(btnGravar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        LimpaCampos();
        HabilitaCampos(false);
        HabilitaBotoes(true);
        incluir = false;
        editar = false;

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        // TODO add your handling code here:
        LimpaCampos();
        HabilitaCampos(true);
        HabilitaBotoes(false);
        incluir = true;
        txtCodigo.setEnabled(false);
        txtDescricao.requestFocus();
        txtPreco.setValue(0);
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
        LimpaCampos();
        HabilitaCampos(true);
        HabilitaBotoes(false);
        txtCodigo.setEnabled(false);
        editar = false;
        
        try{
            
            if(tblprodutos.getRowCount() > 0){
                
                int posLinha = tblprodutos.getSelectedRow();
                
                if(posLinha >= 0){
                    txtCodigo.setText(tblprodutos.getValueAt(posLinha, 0).toString());
                    txtDescricao.setText(tblprodutos.getValueAt(posLinha, 1).toString());
                    spnQuantidade.setValue(Integer.valueOf(tblprodutos.getValueAt(posLinha, 2).toString()));
                    txtPreco.setValue(mfPreco.stringToValue(tblprodutos.getValueAt(posLinha, 3).toString()));
                }else{
                    JOptionPane.showMessageDialog(null, "Nenhum produto selecionado",
                    "Erro:", JOptionPane.ERROR_MESSAGE);
                }
                
            }else{
                JOptionPane.showMessageDialog(null, "Não existe produtos cadastrados",
                    "Erro:", JOptionPane.ERROR_MESSAGE);
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao editar" + ex.getMessage(),
                    "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        // TODO add your handling code here:
        try{
            
            DaoProduto produto = new DaoProduto();
            
            produto.setDescricao(txtDescricao.getText());
            produto.setQuantidade((Integer)spnQuantidade.getValue());
            produto.setPrecoUnit((Double) txtPreco.getValue());
            
            if(incluir){
                
                produto.incluir();
                
            }else if(editar){
                
                produto.setCodPro(Integer.valueOf(txtCodigo.getText()));
                produto.alterar();
                
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao gravar" + ex.getMessage(),
                    "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        try {

            int Codigo = Integer.valueOf(JOptionPane.showInputDialog(null,
                    "Informe o código do produto que deseja excluir:",
                    "Excluir", JOptionPane.QUESTION_MESSAGE));

            DaoProduto dp = new DaoProduto();
            dp.setCodPro(Codigo);
            dp.excluir();
            formInternalFrameOpened(null);

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Ocorreu um erro" + ex.getMessage(),
                    "Erro:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        DaoProduto p = new DaoProduto();
        
        p.setDescricao("");
        
        ArrayList<DaoProduto> ListaProduto;
        try{
            
            ListaProduto = p.pesquisar(p);
            AtualizarTabela(ListaProduto);
            
        }catch(Exception ex){
            
            JOptionPane.showMessageDialog(null, "Ocorreu um erro" + ex.getMessage(),
                    "Erro:", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        DaoProduto c = new DaoProduto();
        String desc = JOptionPane.showInputDialog(null, "informe a descrição do produto"
                + "ou parte dele: ", "Pesquisar", JOptionPane.QUESTION_MESSAGE);
        c.setDescricao(desc);

        try {

            ArrayList<DaoProduto> ListaClientes = c.pesquisar(c);
            AtualizarTabela(ListaClientes);

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Ocorreu um erro no Banco "
                    + "de dados" + ex.getMessage(),
                    "Erro:", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void AtualizarTabela(ArrayList<DaoProduto> pro){
        
        LimpaTabela(tblprodutos);
        if(!pro.isEmpty()){
            
            DefaultTableModel dados = (DefaultTableModel) tblprodutos.getModel();
            
            String linha[] = new String[]{"","","",""};
            
            try{
                
                int pos = -1;
                for (DaoProduto produto : pro) {
                    
                    dados.addRow(linha);
                    
                    dados.setValueAt(produto.getCodPro(), pos, 0);
                    dados.setValueAt(produto.getDescricao(), pos, 1);
                    dados.setValueAt(produto.getQuantidade(), pos, 2);
                    dados.setValueAt(mfPreco.valueToString(produto.getPrecoUnit()), pos, 3);
                    
                }
                
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Ocorreu um erro" + ex.getMessage(),
                    "Erro:", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spnQuantidade;
    private javax.swing.JTable tblprodutos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JFormattedTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}
